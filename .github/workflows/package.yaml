name: Package ARM
on:
  workflow_dispatch:
    inputs:
      pidType:
        description: 'Specify which pids to use, oracle or microsoft.'
        required: true
        default: 'microsoft'
      ref:
        description: 'Specify Git Ref if needed.'
        required: false
        default: 'refs/heads/develop'
env:
  refArmttk: 8e08a92dbb0a22b8560ec854a60e9a8a7b71c68f
  refJavaee: 0f04aab7fc41be640bd22191d7a16054863cfe91
  repoName: "arm-oraclelinux-wls-admin"

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout azure-javaee-iaas
        uses: actions/checkout@v2
        with:
          repository: Azure/azure-javaee-iaas
          path: azure-javaee-iaas
          ref: ${{ env.refJavaee }}
      - name: Checkout arm-ttk
        uses: actions/checkout@v2
        with:
          repository: Azure/arm-ttk
          path: arm-ttk
          ref: ${{ env.refArmttk }}
      - name: Checkout ${{ env.repoName }}
        uses: actions/checkout@v2
        with:
          path: ${{ env.repoName }}
          ref: ${{ github.event.inputs.ref }}
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build azure-javaee-iaas
        run: mvn -DskipTests clean install --file azure-javaee-iaas/pom.xml

      - name: Build and test ${{ env.repoName }} using ${{ github.event.inputs.pidType }} pids
        run: |
          cd ${{ env.repoName }}
          pidType=${{ github.event.inputs.pidType }}
          if [[ '${pidType}' == 'oracle' ]];then
            mvn -Ptemplate-validation-tests clean install
          else
            mvn -Ptemplate-validation-tests clean install -Ddev
          fi

      - name: Generate artifact file name and path
        id: artifact_file
        run: |
          version=$(awk '/<version>[^<]+<\/version>/{gsub(/<version>|<\/version>/,"",$1);print $1;exit;}' ${{ env.repoName }}/pom.xml)
          artifactName=${{ env.repoName }}-$version-arm-assembly
          unzip ${{ env.repoName }}/target/$artifactName.zip -d ${{ env.repoName }}/target/$artifactName
          echo "##[set-output name=artifactName;]${artifactName}-${{ github.event.inputs.pidType }}"
          echo "##[set-output name=artifactPath;]${{ env.repoName }}/target/$artifactName"
      - name: Archive ${{ env.repoName }} template
        uses: actions/upload-artifact@v1
        if: success()
        with:
          name: ${{steps.artifact_file.outputs.artifactName}}
          path: ${{steps.artifact_file.outputs.artifactPath}}

