{
   "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion": "1.0.0.0",
   "parameters": {
      "_artifactsLocation": {
         "type": "string",
         "metadata": {
            "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
         }
      },
      "_artifactsLocationAdminTemplate": {
         "defaultValue": "[if(contains(parameters('_artifactsLocation'), 'githubusercontent'), parameters('_artifactsLocation'), deployment().properties.templateLink.uri)]",
         "type": "string",
         "metadata": {
            "description": "If we are deploying from the command line, use the passed in _artifactsLocation, otherwise use the default."
         }
      },
      "_artifactsLocationSasToken": {
         "type": "securestring",
         "metadata": {
            "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
         }
      },
      "adminPasswordOrKey": {
         "type": "securestring",
         "metadata": {
            "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
         }
      },
      "adminUsername": {
         "type": "string",
         "metadata": {
            "description": "User name for the Virtual Machine."
         }
      },
      "adminVMName": {
         "type": "string",
         "defaultValue": "adminVM",
         "metadata": {
            "description": "Admin Server hosting VM name."
         }
      },
      "authenticationType": {
         "type": "string",
         "defaultValue": "password",
         "allowedValues": [
            "sshPublicKey",
            "password"
         ],
         "metadata": {
            "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
         }
      },
      "dnsLabelPrefix": {
         "type": "string",
         "metadata": {
            "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
         }
      },
      "guidValue": {
         "type": "string",
         "defaultValue": "[newGuid()]"
      },
      "linuxOSVersion": {
         "type": "string",
         "defaultValue": "owls-122130-8u131-ol74",
         "allowedValues": [
            "owls-122130-8u131-ol73",
            "owls-122130-8u131-ol74"
         ],
         "metadata": {
            "description": "The Oracle Linux version for the VM. The first number is for WebLogic Server version, the second number is for Java version, and the last is for Oralce Linux version."
         }
      },
      "location": {
         "type": "string",
         "metadata": {
            "description": "Location for all resources."
         }
      },
      "portsToExpose": {
         "type": "string",
         "defaultValue": "80,443,7001-9000",
         "metadata": {
            "description": "Ports and port ranges to expose"
         }
      },
      "vmSizeSelect": {
         "type": "string",
         "defaultValue": "Standard_A3",
         "allowedValues": [
            "Standard_A1",
            "Standard_A2",
            "Standard_A3",
            "Standard_A4"
         ],
         "metadata": {
            "description": "Select appropriate VM Size as per requirement (Standard_A1, Standard_A2, Standard_A3, Standard_A4)"
         }
      },
      "wlsDomainName": {
         "type": "string",
         "metadata": {
            "description": "Provide Weblogic domain name"
         }
      },
      "wlsPassword": {
         "type": "securestring",
         "metadata": {
            "description": "Password for your Weblogic domain name"
         }
      },
      "wlsUserName": {
         "type": "string",
         "metadata": {
            "description": "Username for your Weblogic domain name"
         }
      }
   },
   "variables": {
      "const_addressPrefix": "10.0.0.0/16",
      "const_imageOffer": "weblogic-122130-jdk8u131-ol74-preview",
      "const_imagePublisher": "oracle",
      "const_linuxConfiguration": {
         "disablePasswordAuthentication": true,
         "ssh": {
            "publicKeys": [
               {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPasswordOrKey')]"
               }
            ]
         }
      },
      "const_publicIPAddressType": "Dynamic",
      "const_requiredPortrange": ",65200-65535,5556",
      "const_storageAccountType": "Standard_LRS",
      "const_subnetPrefix": "10.0.0.0/24",
      "const_vmSize": "[parameters('vmSizeSelect')]",
      "name_networkSecurityGroup": "[concat(parameters('dnsLabelPrefix'), '-nsg')]",
      "name_nic": "adminServerVM_NIC",
      "name_oradownScript": "oradown.sh",
      "name_publicIPAddress": "adminServerVM_PublicIP",
      "name_scriptFile": "setupAdminDomain.sh",
      "name_storageAccount": "[concat(take(replace(parameters('guidValue'),'-',''),6),'olvm')]",
      "name_subnet": "Subnet",
      "name_virtualNetwork": "[concat(parameters('wlsDomainName'),'_VNET')]",
      "ref_networkSecurityGroup": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('name_networkSecurityGroup'))]",
      "ref_subnet": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('name_virtualNetwork'), variables('name_subnet'))]"
   },
   "resources": [
      {
         "apiVersion": "2019-10-01",
         "name": "${admin.admin.start}",
         "type": "Microsoft.Resources/deployments",
         "properties": {
            "mode": "Incremental",
            "template": {
               "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
               "contentVersion": "1.0.0.0",
               "resources": [
               ]
            }
         }
      },
      {
         "type": "Microsoft.Network/networkSecurityGroups",
         "apiVersion": "2019-06-01",
         "name": "[variables('name_networkSecurityGroup')]",
         "location": "[parameters('location')]",
         "properties": {
            "securityRules": [
               {
                  "name": "WebLogicPorts",
                  "properties": {
                     "protocol": "TCP",
                     "sourcePortRange": "*",
                     "sourceAddressPrefix": "*",
                     "destinationAddressPrefix": "*",
                     "access": "Allow",
                     "priority": 320,
                     "direction": "Inbound",
                     "destinationPortRanges": "[split(concat(parameters('portsToExpose'),variables('const_requiredPortrange')), ',')]"
                  }
               }
            ]
         }
      },
      {
         "type": "Microsoft.Storage/storageAccounts",
         "apiVersion": "2019-06-01",
         "name": "[variables('name_storageAccount')]",
         "location": "[parameters('location')]",
         "sku": {
            "name": "[variables('const_storageAccountType')]"
         },
         "kind": "Storage",
         "properties": {
         }
      },
      {
         "type": "Microsoft.Network/publicIPAddresses",
         "apiVersion": "2018-11-01",
         "name": "[variables('name_publicIPAddress')]",
         "location": "[parameters('location')]",
         "properties": {
            "publicIPAllocationMethod": "[variables('const_publicIPAddressType')]",
            "dnsSettings": {
               "domainNameLabel": "[concat(toLower(parameters('dnsLabelPrefix')),'-',take(replace(parameters('guidValue'), '-', ''), 10),'-',toLower(parameters('wlsDomainName')))]"
            }
         }
      },
      {
         "type": "Microsoft.Network/virtualNetworks",
         "apiVersion": "2018-11-01",
         "name": "[variables('name_virtualNetwork')]",
         "location": "[parameters('location')]",
         "dependsOn": [
            "[variables('ref_networkSecurityGroup')]"
         ],
         "properties": {
            "addressSpace": {
               "addressPrefixes": [
                  "[variables('const_addressPrefix')]"
               ]
            },
            "subnets": [
               {
                  "name": "[variables('name_subnet')]",
                  "properties": {
                     "addressPrefix": "[variables('const_subnetPrefix')]",
                     "networkSecurityGroup": {
                        "id": "[variables('ref_networkSecurityGroup')]"
                     }
                  }
               }
            ]
         }
      },
      {
         "type": "Microsoft.Network/networkInterfaces",
         "apiVersion": "2018-11-01",
         "name": "[variables('name_nic')]",
         "location": "[parameters('location')]",
         "dependsOn": [
            "[resourceId('Microsoft.Network/publicIPAddresses/', variables('name_publicIPAddress'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/', variables('name_virtualNetwork'))]"
         ],
         "properties": {
            "ipConfigurations": [
               {
                  "name": "ipconfig1",
                  "properties": {
                     "privateIPAllocationMethod": "Dynamic",
                     "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('name_publicIPAddress'))]"
                     },
                     "subnet": {
                        "id": "[variables('ref_subnet')]"
                     }
                  }
               }
            ]
         }
      },
      {
         "type": "Microsoft.Compute/virtualMachines",
         "apiVersion": "2018-10-01",
         "name": "[parameters('adminVMName')]",
         "location": "[parameters('location')]",
         "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/', variables('name_storageAccount'))]",
            "[resourceId('Microsoft.Network/networkInterfaces/', variables('name_nic'))]"
         ],
         "properties": {
            "hardwareProfile": {
               "vmSize": "[variables('const_vmSize')]"
            },
            "osProfile": {
               "computerName": "[parameters('adminVMName')]",
               "adminUsername": "[parameters('adminUsername')]",
               "adminPassword": "[parameters('adminPasswordOrKey')]",
               "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('const_linuxConfiguration'))]"
            },
            "storageProfile": {
               "imageReference": {
                  "publisher": "[variables('const_imagePublisher')]",
                  "offer": "[variables('const_imageOffer')]",
                  "sku": "[parameters('linuxOSVersion')]",
                  "version": "1.1.1"
               },
               "osDisk": {
                  "createOption": "FromImage",
                  "managedDisk": {
                     "storageAccountType": "Standard_LRS"
                  }
               },
               "dataDisks": [
                  {
                     "lun": 0,
                     "createOption": "FromImage",
                     "diskSizeGB": 900,
                     "managedDisk": {
                        "storageAccountType": "Standard_LRS"
                     }
                  }
               ]
            },
            "networkProfile": {
               "networkInterfaces": [
                  {
                     "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('name_nic'))]"
                  }
               ]
            },
            "diagnosticsProfile": {
               "bootDiagnostics": {
                  "enabled": true,
                  "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('name_storageAccount')), '2019-06-01').primaryEndpoints.blob]"
               }
            }
         },
         "plan": {
            "name": "[parameters('linuxOSVersion')]",
            "publisher": "[variables('const_imagePublisher')]",
            "product": "[variables('const_imageOffer')]"
         }
      },
      {
         "type": "Microsoft.Compute/virtualMachines/extensions",
         "name": "[concat(parameters('adminVMName'),'/newuserscript')]",
         "apiVersion": "2019-07-01",
         "location": "[parameters('location')]",
         "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('adminVMName'))]"
         ],
         "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
               "fileUris": [
                  "[uri(parameters('_artifactsLocationAdminTemplate'), concat('../scripts/', variables('name_scriptFile'), parameters('_artifactsLocationSasToken')))]",
                  "[uri(parameters('_artifactsLocationAdminTemplate'), concat('../scripts/', variables('name_oradownScript'), parameters('_artifactsLocationSasToken')))]"
               ],
               "commandToExecute": "[concat('sh',' ',variables('name_scriptFile'),' ',parameters('acceptOTNLicenseAgreement'),' ',parameters('otnAccountUsername'),' ',parameters('otnAccountPassword'),' ',parameters('wlsDomainName'),' ',parameters('wlsUserName'),' ',parameters('wlsPassword'),' ',parameters('adminVMName'),' ')]"
            }
         }
      },
      {
         "apiVersion": "2019-10-01",
         "name": "${admin.admin.end}",
         "type": "Microsoft.Resources/deployments",
         "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('adminVMName'), 'newuserscript')]"
         ],
         "properties": {
            "mode": "Incremental",
            "template": {
               "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
               "contentVersion": "1.0.0.0",
               "resources": [
               ]
            }
         }
      }
   ],
   "outputs": {
      "hostname": {
         "type": "string",
         "value": "[reference(variables('name_publicIPAddress')).dnsSettings.fqdn]"
      },
      "sshCommand": {
         "type": "string",
         "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('name_publicIPAddress')).dnsSettings.fqdn)]"
      },
      "wlsDomainLocation": {
         "type": "string",
         "value": "[concat('/u01/domains/', parameters('wlsDomainName'))]"
      },
      "adminConsoleURL": {
         "type": "string",
         "value": "[concat('http://',reference(variables('name_publicIPAddress')).dnsSettings.fqdn,':7001/console')]"
      },
      "adminConsoleSecureURL": {
         "type": "string",
         "value": "[concat('https://',reference(variables('name_publicIPAddress')).dnsSettings.fqdn,':7002/console')]"
      }
   }
}
